package cdu.xeon.smartskips.dao;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.io.IOException;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;

import javax.inject.Inject;

import org.dbunit.DatabaseUnitException;
import org.dbunit.dataset.IDataSet;
import org.dbunit.operation.DatabaseOperation;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import cdu.xeon.basic.model.Pager;
import cdu.xeon.basic.model.SystemContext;
import cdu.xeon.basic.test.util.AbstractDbUnitTestCase;
import cdu.xeon.basic.test.util.EntitiesHelper;
import cdu.xeon.smartskips.model.Driver;
import cdu.xeon.smartskips.model.Skip;

import org.springframework.orm.hibernate4.SessionHolder;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.support.TransactionSynchronizationManager;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration("/beans.xml")
public class TestUserDao extends AbstractDbUnitTestCase{
	@Inject
	private SessionFactory sessionFactory;
	@Inject
	private IDriverDao driverDao;
	@Inject
    private ISkipDao skipDao;
	@Before
	public void setUp() throws SQLException, IOException, DatabaseUnitException {
		
		Session s = sessionFactory.openSession();
		TransactionSynchronizationManager.bindResource(sessionFactory, new SessionHolder(s));
		this.backupAllTable();
		IDataSet ds = createDateSet("t_driver");
		DatabaseOperation.CLEAN_INSERT.execute(dbunitCon,ds);
	}
	

	

	
	@Test
	public void testLoadUserName() throws DatabaseUnitException, SQLException {
		Driver ad = EntitiesHelper.getBaseDriver();
		String username = "admin1";
		Driver ed = driverDao.loadByUsername(username);
		EntitiesHelper.assertUser(ed, ad);
	}
	

	
	@Test
	public void testFindUser() {
		SystemContext.setPageOffset(0);
		SystemContext.setPageSize(15);
		List<Driver> actuals = Arrays.asList(new Driver(1,"admin1","0410454232","admin1","admin1@admin.com","110",1,0,2),
				   new Driver(2,"admin2","123","admin1","admin1@admin.com","0410456232",1,0,2),
				   new Driver(3,"admin3","123","admin1","admin1@admin.com","0410454732",1,0,2),
				   new Driver(4,"admin4","123","admin1","admin1@admin.com","0410454832",1,0,2)
				   );
		Pager<Driver> pages = driverDao.findDriver();
		assertNotNull(pages);
		assertEquals(pages.getTotal(), 4);
		EntitiesHelper.assertUsers(pages.getDatas(), actuals);
	}
	@Test
	public void testUpdateUer() {
		Driver driver= new Driver(2,"admin6","123","abc","admin2@admin.com","127",1,0,2);
		
		driverDao.updateDriver(driver);
		
	}
	
	
	@After
	public void tearDown() throws DatabaseUnitException, SQLException, IOException {
		SessionHolder holder = (SessionHolder) TransactionSynchronizationManager.getResource(sessionFactory);
		Session s = holder.getSession(); 
		s.flush();
		TransactionSynchronizationManager.unbindResource(sessionFactory);
		//this.resumeTable();
	}
}
